{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","setCurrentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnimation","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","onChange","e","target","value","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA8EeA,EA3EA,SAAC,GAAgH,IAA9GC,EAA6G,EAA7GA,SAAUC,EAAmG,EAAnGA,YAAaC,EAAsF,EAAtFA,eAAgBC,EAAsE,EAAtEA,UAAWC,EAA2D,EAA3DA,aAAcC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEtGC,EAAuB,SAACC,GAE1B,IAAMC,EAAWJ,EAAMK,KAAI,SAACC,GACxB,OAAIA,EAAKC,KAAOJ,EAASI,GACd,2BACAD,GADP,IAEIE,QAAQ,IAGL,2BACAF,GADP,IAEIE,QAAQ,OAIpBP,EAASG,IAOPK,EAAU,SAACC,GACb,OACIC,KAAKC,MAAMF,EAAO,IAAM,KAAO,IAAMC,KAAKC,MAAMF,EAAO,KAAKG,OAAO,IAOrEC,EAAgB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACjBC,EAAejB,EAAMkB,WAAU,SAACZ,GAAD,OAAUA,EAAKC,KAAOb,EAAYa,MACnD,iBAAdQ,EAFiB,gCAGXpB,EAAeK,GAAOiB,EAAe,GAAKjB,EAAMmB,SAHrC,OAIjBjB,EAAqBF,GAAOiB,EAAe,GAAKjB,EAAMmB,SAJrC,UAMH,cAAdJ,EANiB,qBAOZE,EAAe,GAAKjB,EAAMmB,UAAY,EAP1B,iCAQPxB,EAAeK,EAAMA,EAAMmB,OAAS,IAR7B,cASbjB,EAAqBF,EAAOiB,EAAe,IACvCrB,GAAWH,EAAS2B,QAAQC,OAVnB,4CAaX1B,EAAeK,GAAOiB,EAAe,GAAKjB,EAAMmB,SAbrC,QAcjBjB,EAAqBF,GAAOiB,EAAe,GAAKjB,EAAMmB,SAdrC,QAgBjBvB,GAAWH,EAAS2B,QAAQC,OAhBX,4CAAH,sDAmBhBC,EAAiB,CACnBC,UAAU,cAAD,OAAgBxB,EAASyB,oBAAzB,OAGb,OACI,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,eAAf,UACI,4BAAIhB,EAAQV,EAAS2B,eACrB,sBAAKC,MAAO,CAAEC,WAAW,6BAAD,OAA+BlC,EAAYmC,MAAM,GAAjD,YAAuDnC,EAAYmC,MAAM,GAAzE,MAAkFJ,UAAU,QAApH,UACI,uBAAOK,IAAK,EAAGC,IAAKhC,EAASiC,UAAY,EAAGC,SAhCxC,SAACC,GACjBzC,EAAS2B,QAAQM,YAAcQ,EAAEC,OAAOC,MACxCtC,EAAY,2BAAKC,GAAN,IAAgB2B,YAAaQ,EAAEC,OAAOC,UA8B8BA,MAAOrC,EAAS2B,YAAaW,KAAK,UACrG,qBAAKZ,UAAU,gBAAgBE,MAAOL,OAE1C,4BAAIvB,EAASiC,SAAWvB,EAAQV,EAASiC,UAAY,YAEzD,sBAAKP,UAAU,eAAf,UACI,cAAC,IAAD,CAAiBa,QAAS,kBAAMxB,EAAiB,cAAcW,UAAU,YAAYc,KAAK,KAAKC,KAAMC,MACrG,cAAC,IAAD,CAAiBH,QAhDL,WACpB1C,EAAYH,EAAS2B,QAAQsB,QAAUjD,EAAS2B,QAAQC,OACxDxB,GAAcD,IA8CqC6B,UAAU,OAAOc,KAAK,KAAKC,KAAM5C,EAAY+C,IAAUC,MAClG,cAAC,IAAD,CAAiBN,QAAS,kBAAMxB,EAAiB,iBAAiBW,UAAU,eAAec,KAAK,KAAKC,KAAMK,aC5D5GC,EAVF,SAAC,GAAgC,IAA9BpD,EAA6B,EAA7BA,YAAaE,EAAgB,EAAhBA,UACzB,OACI,sBAAK6B,UAAU,iBAAf,UACI,qBAAKA,UAAW7B,EAAY,aAAe,GAAImD,IAAKrD,EAAYsD,MAAOC,IAAI,KAC3E,6BAAKvD,EAAYwD,OACjB,6BAAKxD,EAAYyD,aC2BdC,EAhCK,SAAC,GAAwE,IAAtE3D,EAAqE,EAArEA,SAAUG,EAA2D,EAA3DA,UAAWU,EAAgD,EAAhDA,KAAMN,EAA0C,EAA1CA,MAAOL,EAAmC,EAAnCA,eAAgBY,EAAmB,EAAnBA,GAAIN,EAAe,EAAfA,SACnEoD,EAAiB,uCAAG,4BAAArC,EAAA,sEAChBrB,EAAeW,GADC,OAGhBF,EAAWJ,EAAMK,KAAI,SAACC,GACxB,OAAIA,EAAKC,KAAOA,EACL,2BACAD,GADP,IAEIE,QAAQ,IAGL,2BACAF,GADP,IAEIE,QAAQ,OAIpBP,EAASG,GAELR,GAAWH,EAAS2B,QAAQC,OAlBV,2CAAH,qDAoBvB,OACI,sBAAKiB,QAASe,EAAmB5B,UAAS,uBAAkBnB,EAAKE,OAAS,WAAa,IAAvF,UACI,qBAAKyC,IAAK3C,EAAK4C,KAAMH,IAAKzC,EAAK0C,QAC/B,sBAAKvB,UAAU,mBAAf,UACI,6BAAKnB,EAAK4C,OACV,6BAAK5C,EAAK6C,gBCHXG,EAtBC,SAAC,GAA6E,IAA3E1D,EAA0E,EAA1EA,UAAWH,EAA+D,EAA/DA,SAAUO,EAAqD,EAArDA,MAAOL,EAA8C,EAA9CA,eAAgBM,EAA8B,EAA9BA,SAAUsD,EAAoB,EAApBA,cACrE,OACI,sBAAK9B,UAAS,kBAAa8B,EAAgB,iBAAmB,IAA9D,UACI,yCACA,qBAAK9B,UAAU,gBAAf,SACKzB,EAAMK,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,CACIV,UAAWA,EACXI,MAAOA,EACPL,eAAgBA,EAChBW,KAAMA,EACNC,GAAID,EAAKC,GAETd,SAAUA,EACVQ,SAAUA,GAFLK,EAAKC,aCInBiD,EAfH,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,iBAAkBF,EAAoB,EAApBA,cAK7B,OACI,gCACI,wCACA,yBAAQ9B,UAAW8B,EAAgB,iBAAmB,GAAIjB,QAPvC,WACvBmB,GAAkBF,IAMd,UACI,cAAC,IAAD,CAAiBf,KAAMkB,MAD3B,kB,QC2EGC,MAtFf,WACE,MAAO,CACL,CACET,KAAM,eACNF,MACE,yGACFG,OAAQ,6BACRS,MAAO,gDACP/B,MAAO,CAAC,UAAW,WACnBtB,GAAIsD,cACJrD,QAAQ,GAEV,CACE0C,KAAM,WACNF,MACE,yGACFG,OAAQ,WACRS,MAAO,+CACP/B,MAAO,CAAC,UAAW,WACnBtB,GAAIsD,cACJrD,QAAQ,GAEV,CACE0C,KAAM,aACNF,MACE,yGACFG,OAAQ,WACRS,MAAO,+CACP/B,MAAO,CAAC,UAAW,WACnBtB,GAAIsD,cACJrD,QAAQ,GAEV,CACE0C,KAAM,YACNF,MACE,yGACFG,OAAQ,WACRS,MAAO,+CACP/B,MAAO,CAAC,UAAW,WACnBtB,GAAIsD,cACJrD,QAAQ,GAEV,CACE0C,KAAM,aACNF,MACE,yGACFG,OAAQ,WACRS,MAAO,+CACP/B,MAAO,CAAC,UAAW,WACnBtB,GAAIsD,cACJrD,QAAQ,GAEV,CACE0C,KAAM,uBACNF,MACE,yGACFG,OAAQ,6BACRS,MAAO,gDACP/B,MAAO,CAAC,UAAW,WACnBtB,GAAIsD,cACJrD,QAAQ,GAEV,CACE0C,KAAM,YACNF,MACE,yGACFG,OAAQ,sBACRS,MAAO,gDACP/B,MAAO,CAAC,UAAW,WACnBtB,GAAIsD,cACJrD,QAAQ,GAEV,CACE0C,KAAM,SACNF,MACE,yGACFG,OAAQ,eACRS,MAAO,+CACP/B,MAAO,CAAC,UAAW,WACnBtB,GAAIsD,cACJrD,QAAQ,KCLCsD,MA/Df,WAAgB,IAAD,EAEPrE,EAAWsE,iBAAO,MAFX,EAKaC,mBAASC,KALtB,mBAKNjE,EALM,KAKCC,EALD,OAMyB+D,mBAAShE,EAAM,IANxC,mBAMNN,EANM,KAMOC,EANP,OAOqBqE,oBAAS,GAP9B,mBAONpE,EAPM,KAOKC,EAPL,OAQmBmE,mBAAS,CACvCtC,YAAa,EACbM,SAAU,EACVR,oBAAqB,IAXV,mBAQNzB,EARM,KAQID,EARJ,OAa6BkE,oBAAS,GAbtC,mBAaNT,EAbM,KAaSE,EAbT,KAcPS,EAAoB,SAAChC,GACzB,IAAMd,EAAUc,EAAEC,OAAOT,YACnBM,EAAWE,EAAEC,OAAOH,SAEpBmC,EAAiBxD,KAAKyD,MAAMhD,GAC5BiD,EAAkB1D,KAAKyD,MAAMpC,GAC7BsC,EAAY3D,KAAKyD,MAAOD,EAAiBE,EAAmB,KAClEvE,EAAY,2BAAKC,GAAN,IAAgB2B,YAAaN,EAASY,SAAUA,EAAUR,oBAAqB8C,MAEtFC,EAAc,uCAAG,4BAAAvD,EAAA,6DACjBC,EAAejB,EAAMkB,WAAU,SAACZ,GAAD,OAAUA,EAAKC,KAAOb,EAAYa,MADhD,SAEfZ,EAAeK,GAAOiB,EAAe,GAAKjB,EAAMmB,SAFjC,OAGjBvB,GAAWH,EAAS2B,QAAQC,OAHX,2CAAH,qDAKpB,OACE,sBAAKI,UAAS,cAAS8B,EAAgB,iBAAmB,IAA1D,UACE,cAAC,EAAD,CAAKA,cAAeA,EAAeE,iBAAkBA,IACrD,cAAC,EAAD,CAAM7D,UAAWA,EAAWF,YAAaA,IACzC,cAAC,GAAD,GACEG,aAAcA,EACdD,UAAWA,GAFb,6BAGgBC,GAHhB,4BAIeH,GAJf,+BAKkBC,GALlB,yBAMYF,GANZ,4BAOeK,GAPf,yBAQYC,GARZ,sBASSC,GATT,yBAUYC,GAVZ,IAYA,cAAC,EAAD,CACED,MAAOA,EACPL,eAAgBA,EAChBM,SAAUA,EACVL,UAAWA,EACXH,SAAUA,EACV8D,cAAeA,IACjB,uBACEiB,aAAcN,EACdO,iBAAkBP,EAClBQ,IAAKjF,EACLsD,IAAKrD,EAAYkE,MACjBe,QAASJ,QCzDFK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.49d7b984.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faPause, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nconst Player = ({ audioRef, currentSong, setCurrentSong, isPlaying, setIsPlaying, setSongInfo, songInfo, songs, setSongs }) => {\n\n    const activeLibraryHandler = (nextPrev) => {\n        // add active state\n        const newSongs = songs.map((song) => {\n            if (song.id === nextPrev.id) {\n                return {\n                    ...song,\n                    active: true,\n                }\n            } else {\n                return {\n                    ...song,\n                    active: false,\n                }\n            }\n        });\n        setSongs(newSongs);\n    }\n    // event handlers\n    const playSongHandler = () => {\n        isPlaying ? audioRef.current.pause() : audioRef.current.play();\n        setIsPlaying(!isPlaying);\n    };\n    const getTime = (time) => {\n        return (\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        )\n    };\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({ ...songInfo, currentTime: e.target.value });\n    };\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id)\n        if (direction === 'skip-forward') {\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n        }\n        if (direction === 'skip-back') {\n            if ((currentIndex - 1) % songs.length === -1) {\n                await setCurrentSong(songs[songs.length - 1]);\n                activeLibraryHandler(songs[(currentIndex - 1)]);\n                if (isPlaying) audioRef.current.play()\n                return;\n            }\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length])\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n        }\n        if (isPlaying) audioRef.current.play()\n    };\n    // add the styles\n    const trackAnimation = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    }\n\n    return (\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <div style={{ background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})` }} className=\"track\">\n                    <input min={0} max={songInfo.duration || 0} onChange={dragHandler} value={songInfo.currentTime} type=\"range\" />\n                    <div className=\"animate-track\" style={trackAnimation}></div>\n                </div>\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay} />\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\n            </div>\n        </div>\n    )\n};\n\nexport default Player;","import React from 'react';\n\nconst Song = ({ currentSong, isPlaying }) => {\n    return (\n        <div className=\"song-container\">\n            <img className={isPlaying ? \"rotateSong\" : \"\"} src={currentSong.cover} alt=\"\"></img>\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    )\n};\n\nexport default Song;","import React from 'react';\n\nconst LibrarySong = ({ audioRef, isPlaying, song, songs, setCurrentSong, id, setSongs }) => {\n    const songSelectHandler = async () => {\n        await setCurrentSong(song);\n        // add active state\n        const newSongs = songs.map((song) => {\n            if (song.id === id) {\n                return {\n                    ...song,\n                    active: true,\n                }\n            } else {\n                return {\n                    ...song,\n                    active: false,\n                }\n            }\n        })\n        setSongs(newSongs);\n        // check if song is playing\n        if (isPlaying) audioRef.current.play();\n    };\n    return (\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\n            <img alt={song.name} src={song.cover}></img>\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n        </div>\n    );\n};\n\nexport default LibrarySong;","import React, { useRef } from 'react';\nimport LibrarySong from './LibrarySong'\n\nconst Library = ({ isPlaying, audioRef, songs, setCurrentSong, setSongs, libraryStatus }) => {\n    return (\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map((song) =>\n                    <LibrarySong\n                        isPlaying={isPlaying}\n                        songs={songs}\n                        setCurrentSong={setCurrentSong}\n                        song={song}\n                        id={song.id}\n                        key={song.id}\n                        audioRef={audioRef}\n                        setSongs={setSongs}\n                    />\n                )}\n            </div>\n        </div>\n    )\n};\n\nexport default Library;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n    const openLibraryHandler = () => {\n        setLibraryStatus(!libraryStatus);\n    };\n\n    return (\n        <nav>\n            <h1>Musify</h1>\n            <button className={libraryStatus ? \"library-active\" : \"\"} onClick={openLibraryHandler}>\n                <FontAwesomeIcon icon={faMusic}></FontAwesomeIcon> Library\n            </button>\n        </nav>\n    )\n}\n\nexport default Nav","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Sleepover\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\n      artist: \"Nymano, JK the Sage\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10130\",\n      color: [\"#F4A49E\", \"#5B518B\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Sodium\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/10/efaa848553d09b4d9fc0752844456e41b34de276-1024x1024.jpg\",\n      artist: \"Philanthrope\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9149\",\n      color: [\"#C7F1ED\", \"#353C5C\"],\n      id: uuidv4(),\n      active: false,\n    }\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;","import React, { useState, useRef } from 'react';\n// import styles\nimport './styles/app.scss';\n// import components\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n// import songs\nimport data from './data';\n\n\n\nfunction App() {\n  // ref\n  const audioRef = useRef(null);\n\n  // State \n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    // calc percentage of song\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100)\n    setSongInfo({ ...songInfo, currentTime: current, duration: duration, animationPercentage: animation })\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id)\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n    if (isPlaying) audioRef.current.play();\n  }\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song isPlaying={isPlaying} currentSong={currentSong} />\n      <Player\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n        isPlaying={isPlaying}\n        audioRef={audioRef}\n        libraryStatus={libraryStatus} />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}